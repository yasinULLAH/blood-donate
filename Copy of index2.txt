<?php
/**
 * Community Blood Donation Platform
 *
 * A full-fledged, single-file application for managing blood donors, requests, and drives.
 *
 * @author Yasin Ullah (Pakistani)
 * @version 2.0.0
 */

// --- BASIC CONFIGURATION ---
session_start();
ob_start(); // Start output buffering to prevent "headers already sent" errors

error_reporting(E_ALL);
ini_set('display_errors', 1); // Set to 0 in production for security
date_default_timezone_set('Asia/Karachi');

define('DB_FILE', __DIR__ . '/blood_donation_app.sqlite');
define('SITE_NAME', 'LifeFlow Connect');
define('APP_VERSION', '2.0.0');
define('SESSION_LIFETIME', 3600); // 1 hour

// --- DATABASE INITIALIZATION & HELPER FUNCTIONS ---

/**
 * Gets the PDO database connection object.
 * @return PDO The PDO database object.
 */
function get_db() {
    static $db = null;
    if ($db === null) {
        try {
            $db = new PDO('sqlite:' . DB_FILE);
            $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
            $db->setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE, PDO::FETCH_ASSOC);
            $db->exec("PRAGMA foreign_keys = ON;");
        } catch (PDOException $e) {
            // Use a simple, safe error page for DB connection issues
            http_response_code(500);
            die("
                <div style='font-family: sans-serif; padding: 20px; border: 2px solid #dc3545; background: #f8d7da; color: #721c24; margin: 50px;'>
                    <h1>Database Connection Error</h1>
                    <p>Could not connect to the database. Please ensure the web server has write permissions for the directory containing this script.</p>
                    <p><strong>Details:</strong> " . htmlspecialchars($e->getMessage()) . "</p>
                </div>
            ");
        }
    }
    return $db;
}

/**
 * Initializes the database schema and seeds it with an admin user and sample data.
 */
function init_db() {
    $db = get_db();
    $db->exec("
        CREATE TABLE IF NOT EXISTS settings (
            key TEXT PRIMARY KEY,
            value TEXT
        );
        CREATE TABLE IF NOT EXISTS users (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            username TEXT UNIQUE NOT NULL,
            email TEXT UNIQUE NOT NULL,
            password_hash TEXT NOT NULL,
            full_name TEXT NOT NULL,
            contact_number TEXT,
            role TEXT NOT NULL DEFAULT 'donor' CHECK(role IN ('donor', 'admin')),
            approved INTEGER DEFAULT 0,
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP
        );
        CREATE TABLE IF NOT EXISTS profiles (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER UNIQUE NOT NULL,
            blood_group TEXT NOT NULL,
            city TEXT,
            last_donation_date DATE,
            is_available INTEGER DEFAULT 1,
            total_donations INTEGER DEFAULT 0,
            updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
        );
        CREATE TABLE IF NOT EXISTS requests (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            patient_name TEXT NOT NULL,
            blood_group TEXT NOT NULL,
            city TEXT NOT NULL,
            hospital_name TEXT NOT NULL,
            required_units INTEGER DEFAULT 1,
            urgency TEXT NOT NULL DEFAULT 'normal' CHECK(urgency IN ('normal', 'urgent', 'emergency')),
            contact_person TEXT NOT NULL,
            contact_number TEXT NOT NULL,
            details TEXT,
            status TEXT DEFAULT 'pending' CHECK(status IN ('pending', 'fulfilled', 'closed')),
            created_by INTEGER,
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (created_by) REFERENCES users(id) ON DELETE SET NULL
        );
        CREATE TABLE IF NOT EXISTS drives (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            drive_date DATETIME NOT NULL,
            location TEXT NOT NULL,
            location_url TEXT,
            organizer TEXT,
            description TEXT,
            status TEXT DEFAULT 'upcoming' CHECK(status IN ('upcoming', 'completed', 'cancelled')),
            created_by INTEGER NOT NULL,
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (created_by) REFERENCES users(id) ON DELETE CASCADE
        );
        CREATE TABLE IF NOT EXISTS donations (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER NOT NULL,
            donation_date DATE NOT NULL,
            type TEXT NOT NULL CHECK(type IN ('request', 'drive', 'voluntary')),
            request_id INTEGER,
            drive_id INTEGER,
            notes TEXT,
            FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
            FOREIGN KEY (request_id) REFERENCES requests(id) ON DELETE SET NULL,
            FOREIGN KEY (drive_id) REFERENCES drives(id) ON DELETE SET NULL
        );
        CREATE TABLE IF NOT EXISTS announcements (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            title TEXT NOT NULL,
            content TEXT NOT NULL,
            created_by INTEGER NOT NULL,
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
            FOREIGN KEY (created_by) REFERENCES users(id) ON DELETE CASCADE
        );
    ");

    // Seed Admin User if not exists
    $stmt = $db->query("SELECT COUNT(*) FROM users WHERE role = 'admin'");
    if ($stmt->fetchColumn() == 0) {
        $admin_user = 'admin';
        $admin_pass = 'admin123';
        $hashed_pass = password_hash($admin_pass, PASSWORD_DEFAULT);
        $stmt = $db->prepare("INSERT INTO users (username, email, password_hash, full_name, role, approved, contact_number) VALUES (?, ?, ?, ?, 'admin', 1, ?)");
        $stmt->execute([$admin_user, 'admin@local.host', $hashed_pass, 'Administrator', '1234567890']);
        
        // Seed sample data only on first admin creation
        seed_sample_data($db);
        
        set_flash_message('success', "Admin user created: <strong>Username:</strong> {$admin_user}, <strong>Password:</strong> {$admin_pass}. Please change it immediately from the profile page.");
    }
}

/**
 * Seeds the database with sample data.
 * @param PDO $db The database object.
 */
function seed_sample_data($db) {
    try {
        $db->beginTransaction();

        // Sample Users & Profiles
        $users_data = [
            ['john', 'john.doe@email.com', 'John Doe', '03001112233', 'A+'],
            ['jane', 'jane.smith@email.com', 'Jane Smith', '03214455667', 'O-'],
            ['ahmed', 'ahmed.khan@email.com', 'Ahmed Khan', '03337788990', 'B+'],
            ['fatima', 'fatima.ali@email.com', 'Fatima Ali', '03451234567', 'AB+']
        ];
        $user_stmt = $db->prepare("INSERT INTO users (username, email, password_hash, full_name, role, approved, contact_number) VALUES (?, ?, ?, ?, 'donor', 1, ?)");
        $profile_stmt = $db->prepare("INSERT INTO profiles (user_id, blood_group, city, last_donation_date, is_available) VALUES (?, ?, ?, ?, ?)");
        $hashed_pass = password_hash('password123', PASSWORD_DEFAULT);

        foreach ($users_data as $ud) {
            $user_stmt->execute([$ud[0], $ud[1], $hashed_pass, $ud[2], 'donor', 1, $ud[3]]);
            $user_id = $db->lastInsertId();
            $profile_stmt->execute([$user_id, $ud[4], 'Karachi', date('Y-m-d', strtotime('-4 months')), 1]);
        }

        // Sample Requests
        $requests_data = [
            ['Ali Raza', 'A+', 'Lahore', 'General Hospital', 2, 'urgent', 'Kamran', '03123456789'],
            ['Sana Javed', 'O-', 'Islamabad', 'PIMS Hospital', 1, 'emergency', 'Javed Iqbal', '03019876543'],
            ['Baby of Aisha', 'B+', 'Karachi', 'Aga Khan Hospital', 1, 'normal', 'Imran', '03225554433'],
            ['Zubair Ahmed', 'AB-', 'Peshawar', 'LRH', 3, 'urgent', 'Fazal', '03346677889']
        ];
        $req_stmt = $db->prepare("INSERT INTO requests (patient_name, blood_group, city, hospital_name, required_units, urgency, contact_person, contact_number) VALUES (?, ?, ?, ?, ?, ?, ?, ?)");
        foreach ($requests_data as $rd) {
            $req_stmt->execute($rd);
        }

        // Sample Drives (created by admin, user_id = 1)
        $drives_data = [
            ['City Center Blood Drive', date('Y-m-d H:i:s', strtotime('+2 week')), 'Main Atrium, Dolmen Mall, Karachi', 'https://maps.google.com', 'Red Crescent Society'],
            ['University Campus Donation Camp', date('Y-m-d H:i:s', strtotime('+1 month')), 'University of Karachi, Main Campus', 'https://maps.google.com', 'University Health Services'],
            ['Annual Life Saver Event', date('Y-m-d H:i:s', strtotime('+2 month')), 'Expo Center, Lahore', 'https://maps.google.com', SITE_NAME],
            ['Community Support Drive', date('Y-m-d H:i:s', strtotime('-1 month')), 'F-9 Park, Islamabad', 'https://maps.google.com', 'Local Community', 'completed']
        ];
        $drive_stmt = $db->prepare("INSERT INTO drives (title, drive_date, location, location_url, organizer, created_by, status) VALUES (?, ?, ?, ?, ?, 1, ?)");
        foreach ($drives_data as $dd) {
            $status = $dd[5] ?? 'upcoming';
            $drive_stmt->execute([$dd[0], $dd[1], $dd[2], $dd[3], $dd[4], $status]);
        }

        // Sample Announcements
        $ann_stmt = $db->prepare("INSERT INTO announcements (title, content, created_by) VALUES (?, ?, 1)");
        $ann_stmt->execute(['Welcome to ' . SITE_NAME, 'We are excited to launch this platform to connect blood donors with those in need. Register today and become a hero!']);
        $ann_stmt->execute(['Benefits of Blood Donation', 'Donating blood not only saves lives but also has health benefits for the donor, such as reducing the risk of heart disease.']);

        $db->commit();
    } catch (Exception $e) {
        $db->rollBack();
        set_flash_message('danger', 'Error seeding sample data: ' . $e->getMessage());
    }
}


/**
 * Safely sanitizes data for output.
 * @param string|array|null $data The data to sanitize.
 * @return string|array|null The sanitized data.
 */
function sanitize($data) {
    if (is_array($data)) {
        return array_map('sanitize', $data);
    }
    return htmlspecialchars((string)$data, ENT_QUOTES, 'UTF-8');
}

/**
 * Redirects to a specified page.
 * @param string $page The page to redirect to.
 * @param array $params Optional query parameters.
 */
function redirect($page = 'dashboard', $params = []) {
    $url = $_SERVER['PHP_SELF'];
    $params['page'] = $page;
    $url .= '?' . http_build_query($params);
    header("Location: " . $url);
    exit;
}

/**
 * Sets a flash message in the session.
 * @param string $type The message type (e.g., 'success', 'danger').
 * @param string $text The message text.
 */
function set_flash_message($type, $text) {
    $_SESSION['flash_message'] = ['type' => $type, 'text' => $text];
}

/**
 * Displays the flash message if one exists.
 */
function display_flash_message() {
    if (isset($_SESSION['flash_message'])) {
        $message = $_SESSION['flash_message'];
        echo "<div class='alert alert-{$message['type']} alert-dismissible fade show' role='alert'>
                {$message['text']}
                <button type='button' class='btn-close' data-bs-dismiss='alert' aria-label='Close'></button>
              </div>";
        unset($_SESSION['flash_message']);
    }
}

/**
 * Checks if a user is logged in.
 * @return bool True if logged in, false otherwise.
 */
function is_logged_in() {
    if (isset($_SESSION['last_activity']) && (time() - $_SESSION['last_activity']) > SESSION_LIFETIME) {
        session_unset();
        session_destroy();
        return false;
    }
    $_SESSION['last_activity'] = time();
    return isset($_SESSION['user_id']);
}

/**
 * Gets the current user's role.
 * @return string|null The user's role or null if not logged in.
 */
function get_current_user_role() {
    return $_SESSION['role'] ?? null;
}

/**
 * Gets the current user's ID.
 * @return int|null The user's ID or null if not logged in.
 */
function get_current_user_id() {
    return $_SESSION['user_id'] ?? null;
}

/**
 * Checks if the current user has the required role(s) and is approved.
 * @param string|array $required_roles The role or roles required.
 * @param bool $redirect_on_fail Whether to redirect if authentication fails.
 * @return bool True if authorized, false otherwise.
 */
function check_auth($required_roles, $redirect_on_fail = true) {
    if (!is_logged_in()) {
        if ($redirect_on_fail) {
            set_flash_message('warning', 'You need to be logged in to access that page.');
            redirect('login');
        }
        return false;
    }

    $user_role = get_current_user_role();
    $is_authorized = $user_role === 'admin' || (is_array($required_roles) ? in_array($user_role, $required_roles) : $user_role === $required_roles);

    if (!$is_authorized) {
        if ($redirect_on_fail) {
            set_flash_message('danger', 'You do not have permission to access that page.');
            redirect('dashboard');
        }
        return false;
    }

    if ($_SESSION['approved'] != 1) {
        if ($redirect_on_fail) {
            set_flash_message('info', 'Your account is pending approval. Please contact an administrator.');
            redirect('dashboard');
        }
        return false;
    }

    return true;
}

/**
 * Calculates the next eligible donation date.
 * @param string|null $last_date The last donation date in Y-m-d format.
 * @return string The next eligible date in Y-m-d format.
 */
function get_next_eligible_date($last_date) {
    if (empty($last_date)) {
        return date('Y-m-d');
    }
    return date('Y-m-d', strtotime($last_date . ' +3 months'));
}

/**
 * Renders an icon from Bootstrap Icons.
 * @param string $icon_name The name of the icon.
 * @param string $extra_classes Additional CSS classes.
 * @return string HTML for the icon.
 */
function render_icon($icon_name, $extra_classes = '') {
    return "<i class='bi bi-{$icon_name} {$extra_classes}'></i>";
}

// --- ACTION HANDLER (Controller Logic) ---

init_db(); // Ensure DB is ready
$action = $_POST['action'] ?? null;
$page = sanitize($_GET['page'] ?? (is_logged_in() ? 'dashboard' : 'home'));
$db = get_db();

if ($_SERVER['REQUEST_METHOD'] === 'POST' && $action) {
    try {
        switch ($action) {
            // AUTHENTICATION
            case 'login':
                $username = $_POST['username'];
                $password = $_POST['password'];
                $stmt = $db->prepare("SELECT id, username, password_hash, role, approved FROM users WHERE username = :username OR email = :username");
                $stmt->execute([':username' => $username]);
                $user = $stmt->fetch();
                if ($user && password_verify($password, $user['password_hash'])) {
                    $_SESSION['user_id'] = $user['id'];
                    $_SESSION['username'] = $user['username'];
                    $_SESSION['role'] = $user['role'];
                    $_SESSION['approved'] = $user['approved'];
                    $_SESSION['last_activity'] = time();
                    redirect('dashboard');
                } else {
                    set_flash_message('danger', 'Invalid username/email or password.');
                }
                break;

            case 'register':
                // Basic validation
                $full_name = sanitize($_POST['full_name']);
                $username = sanitize($_POST['username']);
                $email = filter_var($_POST['email'], FILTER_VALIDATE_EMAIL);
                $password = $_POST['password'];
                $contact = sanitize($_POST['contact_number']);
                $blood_group = sanitize($_POST['blood_group']);
                $city = sanitize($_POST['city']);

                if (!$email || strlen($password) < 8) {
                    set_flash_message('danger', 'Invalid email or password is too short (minimum 8 characters).');
                    break;
                }

                // Check for existing user
                $stmt = $db->prepare("SELECT id FROM users WHERE username = ? OR email = ?");
                $stmt->execute([$username, $email]);
                if ($stmt->fetch()) {
                    set_flash_message('warning', 'Username or email already exists.');
                    break;
                }
                
                $db->beginTransaction();
                // Create user
                $hashed_pass = password_hash($password, PASSWORD_DEFAULT);
                $stmt = $db->prepare("INSERT INTO users (username, email, password_hash, full_name, contact_number, role, approved) VALUES (?, ?, ?, ?, ?, 'donor', 0)");
                $stmt->execute([$username, $email, $hashed_pass, $full_name, $contact]);
                $user_id = $db->lastInsertId();

                // Create profile
                $stmt = $db->prepare("INSERT INTO profiles (user_id, blood_group, city) VALUES (?, ?, ?)");
                $stmt->execute([$user_id, $blood_group, $city]);
                
                $db->commit();
                set_flash_message('success', 'Registration successful! Your account is now pending approval from an administrator.');
                redirect('login');
                break;

            case 'logout':
                session_unset();
                session_destroy();
                set_flash_message('success', 'You have been logged out successfully.');
                redirect('login');
                break;

            // PROFILE & USER MANAGEMENT
            case 'update_profile':
                check_auth('donor');
                $user_id = get_current_user_id();
                $full_name = sanitize($_POST['full_name']);
                $email = filter_var($_POST['email'], FILTER_VALIDATE_EMAIL);
                $contact = sanitize($_POST['contact_number']);
                $blood_group = sanitize($_POST['blood_group']);
                $city = sanitize($_POST['city']);
                $is_available = isset($_POST['is_available']) ? 1 : 0;
                $last_donation_date = empty($_POST['last_donation_date']) ? null : sanitize($_POST['last_donation_date']);

                if(!$email) {
                    set_flash_message('danger', 'Invalid email address provided.');
                    break;
                }
                
                $db->beginTransaction();
                $stmt = $db->prepare("UPDATE users SET full_name = ?, email = ?, contact_number = ? WHERE id = ?");
                $stmt->execute([$full_name, $email, $contact, $user_id]);

                $stmt = $db->prepare("UPDATE profiles SET blood_group = ?, city = ?, is_available = ?, last_donation_date = ?, updated_at = CURRENT_TIMESTAMP WHERE user_id = ?");
                $stmt->execute([$blood_group, $city, $is_available, $last_donation_date, $user_id]);
                $db->commit();

                set_flash_message('success', 'Your profile has been updated successfully.');
                redirect('profile');
                break;
            
            case 'change_password':
                check_auth(['donor', 'admin']);
                $user_id = get_current_user_id();
                $current_password = $_POST['current_password'];
                $new_password = $_POST['new_password'];
                $confirm_password = $_POST['confirm_password'];

                if ($new_password !== $confirm_password || strlen($new_password) < 8) {
                    set_flash_message('danger', 'New passwords do not match or are too short.');
                    redirect('profile');
                }

                $stmt = $db->prepare("SELECT password_hash FROM users WHERE id = ?");
                $stmt->execute([$user_id]);
                $user = $stmt->fetch();

                if ($user && password_verify($current_password, $user['password_hash'])) {
                    $new_hashed_pass = password_hash($new_password, PASSWORD_DEFAULT);
                    $stmt = $db->prepare("UPDATE users SET password_hash = ? WHERE id = ?");
                    $stmt->execute([$new_hashed_pass, $user_id]);
                    set_flash_message('success', 'Password changed successfully.');
                } else {
                    set_flash_message('danger', 'Incorrect current password.');
                }
                redirect('profile');
                break;

            // BLOOD REQUESTS
            case 'create_request':
                check_auth(['donor', 'admin']);
                $stmt = $db->prepare("INSERT INTO requests (patient_name, blood_group, city, hospital_name, required_units, urgency, contact_person, contact_number, details, created_by) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                $stmt->execute([
                    sanitize($_POST['patient_name']),
                    sanitize($_POST['blood_group']),
                    sanitize($_POST['city']),
                    sanitize($_POST['hospital_name']),
                    filter_var($_POST['required_units'], FILTER_VALIDATE_INT),
                    sanitize($_POST['urgency']),
                    sanitize($_POST['contact_person']),
                    sanitize($_POST['contact_number']),
                    sanitize($_POST['details']),
                    get_current_user_id()
                ]);
                set_flash_message('success', 'Blood request created successfully.');
                redirect('requests');
                break;

            case 'update_request_status':
                check_auth('admin');
                $request_id = filter_var($_POST['id'], FILTER_VALIDATE_INT);
                $status = sanitize($_POST['status']);
                if ($request_id && in_array($status, ['pending', 'fulfilled', 'closed'])) {
                    $stmt = $db->prepare("UPDATE requests SET status = ? WHERE id = ?");
                    $stmt->execute([$status, $request_id]);
                    set_flash_message('success', "Request status updated to '{$status}'.");
                }
                redirect('requests');
                break;

            // ADMIN ACTIONS
            case 'admin_update_user':
                check_auth('admin');
                $user_id = filter_var($_POST['user_id'], FILTER_VALIDATE_INT);
                $role = sanitize($_POST['role']);
                $approved = isset($_POST['approved']) ? 1 : 0;
                
                // Prevent demoting the last admin
                $stmt = $db->prepare("SELECT COUNT(*) FROM users WHERE role = 'admin'");
                $stmt->execute();
                $admin_count = $stmt->fetchColumn();

                if ($admin_count <= 1 && get_current_user_id() == $user_id && $role !== 'admin') {
                     set_flash_message('danger', 'You cannot demote the last administrator.');
                } else {
                    $stmt = $db->prepare("UPDATE users SET role = ?, approved = ? WHERE id = ?");
                    $stmt->execute([$role, $approved, $user_id]);
                    set_flash_message('success', 'User details updated.');
                }
                redirect('admin_users');
                break;

            case 'admin_delete_user':
                check_auth('admin');
                $user_id = filter_var($_POST['id'], FILTER_VALIDATE_INT);
                if ($user_id === get_current_user_id()) {
                    set_flash_message('danger', 'You cannot delete your own account.');
                } else {
                    $stmt = $db->prepare("DELETE FROM users WHERE id = ?");
                    $stmt->execute([$user_id]);
                    set_flash_message('success', 'User has been deleted.');
                }
                redirect('admin_users');
                break;
            
            case 'admin_reset_password':
                check_auth('admin');
                $user_id = filter_var($_POST['user_id'], FILTER_VALIDATE_INT);
                $new_password = bin2hex(random_bytes(6)); // Generate a 12-char random password
                $hashed_pass = password_hash($new_password, PASSWORD_DEFAULT);
                $stmt = $db->prepare("UPDATE users SET password_hash = ? WHERE id = ?");
                $stmt->execute([$hashed_pass, $user_id]);
                set_flash_message('success', "Password has been reset. The new password is: <strong>{$new_password}</strong>. Please provide it to the user securely.");
                redirect('admin_users');
                break;

            case 'add_announcement':
                check_auth('admin');
                $stmt = $db->prepare("INSERT INTO announcements (title, content, created_by) VALUES (?, ?, ?)");
                $stmt->execute([sanitize($_POST['title']), sanitize($_POST['content']), get_current_user_id()]);
                set_flash_message('success', 'Announcement posted.');
                redirect('admin_announcements');
                break;

            case 'delete_announcement':
                check_auth('admin');
                $stmt = $db->prepare("DELETE FROM announcements WHERE id = ?");
                $stmt->execute([filter_var($_POST['id'], FILTER_VALIDATE_INT)]);
                set_flash_message('success', 'Announcement deleted.');
                redirect('admin_announcements');
                break;

            case 'backup_db':
                check_auth('admin');
                header('Content-Description: File Transfer');
                header('Content-Type: application/octet-stream');
                header('Content-Disposition: attachment; filename="lifeflow_backup_' . date('Y-m-d_H-i-s') . '.sqlite"');
                header('Expires: 0');
                header('Cache-Control: must-revalidate');
                header('Pragma: public');
                header('Content-Length: ' . filesize(DB_FILE));
                readfile(DB_FILE);
                exit;

            case 'restore_db':
                check_auth('admin');
                if (isset($_FILES['backup_file']) && $_FILES['backup_file']['error'] === UPLOAD_ERR_OK) {
                    $file_tmp_path = $_FILES['backup_file']['tmp_name'];
                    $file_name = $_FILES['backup_file']['name'];
                    $file_ext = strtolower(pathinfo($file_name, PATHINFO_EXTENSION));

                    if ($file_ext === 'sqlite') {
                        if (move_uploaded_file($file_tmp_path, DB_FILE)) {
                            set_flash_message('success', 'Database restored successfully. You may need to log in again.');
                            session_destroy(); // Destroy session as user IDs might have changed
                            redirect('login');
                        } else {
                            set_flash_message('danger', 'Failed to move uploaded file. Check server permissions.');
                        }
                    } else {
                        set_flash_message('danger', 'Invalid file type. Please upload a .sqlite file.');
                    }
                } else {
                    set_flash_message('danger', 'File upload error. Code: ' . $_FILES['backup_file']['error']);
                }
                redirect('admin_backup');
                break;
        }
    } catch (PDOException $e) {
        if ($db->inTransaction()) {
            $db->rollBack();
        }
        set_flash_message('danger', 'A database error occurred: ' . $e->getMessage());
    } catch (Exception $e) {
        set_flash_message('danger', 'An unexpected error occurred: ' . $e->getMessage());
    }
}

// Page redirection logic
if (is_logged_in() && in_array($page, ['login', 'register', 'home'])) {
    redirect('dashboard');
}

// Define available pages for non-logged-in users
$public_pages = ['home', 'login', 'register', 'announcements'];
if (!is_logged_in() && !in_array($page, $public_pages)) {
    set_flash_message('warning', 'Please log in to view this page.');
    redirect('login');
}

// Define roles and blood groups
$roles = ['donor', 'admin'];
$blood_groups = ['A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', 'O+', 'O-'];

// --- TEMPLATE & VIEW LOGIC ---
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="A community platform to connect blood donors with those in need, organize donation drives, and save lives.">
    <meta name="keywords" content="blood donation, find blood donor, blood bank, save life, community health">
    <meta name="author" content="Yasin Ullah">
    <title><?= sanitize(ucfirst(str_replace('_', ' ', $page))) ?> | <?= SITE_NAME ?></title>
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f8f9fa;
        }
        .navbar {
            box-shadow: 0 2px 4px rgba(0,0,0,.1);
        }
        .sidebar {
            position: fixed;
            top: 0;
            left: 0;
            bottom: 0;
            width: 280px;
            padding: 56px 0 0; /* Nav height */
            box-shadow: 0 2px 5px 0 rgba(0,0,0,.05), 0 2px 10px 0 rgba(0,0,0,.05);
            z-index: 600;
            background-color: #fff;
        }
        .main-content {
            padding-left: 280px;
        }
        .sidebar .nav-link {
            font-weight: 500;
            color: #495057;
        }
        .sidebar .nav-link:hover, .sidebar .nav-link.active {
            color: #0d6efd;
            background-color: #e9ecef;
        }
        .sidebar .nav-link .bi {
            margin-right: .8rem;
            font-size: 1.1rem;
        }
        .card {
            border: none;
            box-shadow: 0 0 30px rgba(0,0,0,0.05);
        }
        .btn {
            font-weight: 500;
        }
        .urgency-emergency { border-left: 5px solid #dc3545; }
        .urgency-urgent { border-left: 5px solid #ffc107; }
        .urgency-normal { border-left: 5px solid #0dcaf0; }
        .badge.bg-availability-available { background-color: #198754; }
        .badge.bg-availability-unavailable { background-color: #6c757d; }

        @media (max-width: 991.98px) {
            .sidebar {
                left: -280px;
                transition: left 0.3s ease-in-out;
            }
            .sidebar.active {
                left: 0;
            }
            .main-content {
                padding-left: 0;
            }
        }
    </style>
</head>
<body>

<?php if (is_logged_in()): ?>
    <!-- Main Navigation (for logged-in users) -->
    <header class="navbar navbar-expand-lg navbar-light bg-light fixed-top p-0">
        <div class="container-fluid">
            <button class="navbar-toggler d-lg-none" type="button" id="sidebarToggle">
                <span class="navbar-toggler-icon"></span>
            </button>
            <a class="navbar-brand fw-bold text-primary ms-3" href="?page=dashboard"><?= render_icon('droplet-half') ?> <?= SITE_NAME ?></a>
            
            <div class="ms-auto d-flex align-items-center">
                <div class="dropdown">
                    <a href="#" class="nav-link dropdown-toggle text-secondary" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <?= render_icon('person-circle', 'fs-4') ?>
                    </a>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                        <li><span class="dropdown-item-text">Signed in as <strong><?= sanitize($_SESSION['username']) ?></strong></span></li>
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item" href="?page=profile"><?= render_icon('person-vcard') ?> My Profile</a></li>
                        <li>
                            <form method="post" action="">
                                <input type="hidden" name="action" value="logout">
                                <button type="submit" class="dropdown-item text-danger"><?= render_icon('box-arrow-right') ?> Logout</button>
                            </form>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </header>

    <nav id="sidebarMenu" class="d-lg-block sidebar bg-white">
        <div class="position-sticky">
            <div class="list-group list-group-flush mx-3 mt-4">
                <a href="?page=dashboard" class="list-group-item list-group-item-action py-2 ripple <?= ($page == 'dashboard') ? 'active' : '' ?>">
                    <?= render_icon('speedometer2') ?> <span>Dashboard</span>
                </a>
                <a href="?page=donors" class="list-group-item list-group-item-action py-2 ripple <?= ($page == 'donors') ? 'active' : '' ?>">
                    <?= render_icon('people-fill') ?> <span>Find a Donor</span>
                </a>
                <a href="?page=requests" class="list-group-item list-group-item-action py-2 ripple <?= ($page == 'requests') ? 'active' : '' ?>">
                    <?= render_icon('hearts') ?> <span>Blood Requests</span>
                </a>
                <a href="?page=drives" class="list-group-item list-group-item-action py-2 ripple <?= ($page == 'drives') ? 'active' : '' ?>">
                    <?= render_icon('hospital') ?> <span>Donation Drives</span>
                </a>
                <a href="?page=announcements" class="list-group-item list-group-item-action py-2 ripple <?= ($page == 'announcements') ? 'active' : '' ?>">
                    <?= render_icon('megaphone') ?> <span>Announcements</span>
                </a>

                <?php if (get_current_user_role() === 'admin'): ?>
                <div class="pt-3">
                    <span class="text-muted small text-uppercase px-3">Admin Panel</span>
                    <a href="?page=admin_users" class="list-group-item list-group-item-action py-2 ripple <?= ($page == 'admin_users') ? 'active' : '' ?>">
                        <?= render_icon('person-gear') ?> <span>User Management</span>
                    </a>
                    <a href="?page=admin_announcements" class="list-group-item list-group-item-action py-2 ripple <?= ($page == 'admin_announcements') ? 'active' : '' ?>">
                        <?= render_icon('megaphone-fill') ?> <span>Manage Announcements</span>
                    </a>
                    <a href="?page=admin_backup" class="list-group-item list-group-item-action py-2 ripple <?= ($page == 'admin_backup') ? 'active' : '' ?>">
                        <?= render_icon('database-down') ?> <span>Backup & Restore</span>
                    </a>
                </div>
                <?php endif; ?>
            </div>
        </div>
    </nav>

    <main class="main-content" style="padding-top: 58px;">
        <div class="container-fluid pt-4">
            <?php display_flash_message(); ?>
            <?php if (is_logged_in() && $_SESSION['approved'] == 0): ?>
            <div class='alert alert-warning'>Your account is pending approval by an administrator. Some features may be limited.</div>
            <?php endif; ?>

<?php else: ?>
    <!-- Public Navigation -->
    <nav class="navbar navbar-expand-lg navbar-light bg-white fixed-top shadow-sm">
        <div class="container">
            <a class="navbar-brand fw-bold text-primary" href="?page=home"><?= render_icon('droplet-half') ?> <?= SITE_NAME ?></a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#publicNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="publicNav">
                <ul class="navbar-nav ms-auto mb-2 mb-lg-0 align-items-center">
                    <li class="nav-item"><a class="nav-link <?= ($page == 'home') ? 'active' : '' ?>" href="?page=home">Home</a></li>
                    <li class="nav-item"><a class="nav-link <?= ($page == 'announcements') ? 'active' : '' ?>" href="?page=announcements">Announcements</a></li>
                    <li class="nav-item"><a class="nav-link" href="?page=login">Login</a></li>
                    <li class="nav-item"><a class="btn btn-primary ms-lg-2" href="?page=register">Register as Donor</a></li>
                </ul>
            </div>
        </div>
    </nav>
    <main style="padding-top: 70px;">
        <div class="container pt-4">
            <?php display_flash_message(); ?>
<?php endif; ?>

<?php
// --- PAGE CONTENT ROUTER ---
switch ($page) {
    case 'home':
        $stats = $db->query("
            SELECT
                (SELECT COUNT(*) FROM users WHERE role='donor' AND approved=1) as total_donors,
                (SELECT COUNT(*) FROM requests WHERE status='fulfilled') as lives_saved,
                (SELECT COUNT(*) FROM drives WHERE status='upcoming') as upcoming_drives
        ")->fetch();
        $latest_announcements = $db->query("SELECT * FROM announcements ORDER BY created_at DESC LIMIT 3")->fetchAll();
        ?>
        <div class="container my-5">
            <div class="row align-items-center">
                <div class="col-lg-6">
                    <h1 class="display-4 fw-bold lh-1 mb-3">Become a Hero. <br><span class="text-primary">Donate Blood, Save Lives.</span></h1>
                    <p class="lead">Join our community of voluntary blood donors. Your single donation can save up to three lives. Find requests near you, get notified about donation drives, and be a beacon of hope.</p>
                    <div class="d-grid gap-2 d-md-flex justify-content-md-start">
                        <a href="?page=register" class="btn btn-primary btn-lg px-4 me-md-2">Register Now</a>
                        <a href="?page=login" class="btn btn-outline-secondary btn-lg px-4">Login</a>
                    </div>
                </div>
                <div class="col-lg-6 text-center">
                    <img src="https://i.imgur.com/2j9YQ9B.png" class="img-fluid" alt="Blood Donation Graphic" style="max-height: 400px;">
                </div>
            </div>

            <div class="row text-center my-5 py-5 bg-light rounded">
                <div class="col-md-4">
                    <h3><?= render_icon('people-fill', 'text-primary') ?> <?= sanitize($stats['total_donors']) ?>+</h3>
                    <p class="text-muted">Registered Donors</p>
                </div>
                <div class="col-md-4">
                    <h3><?= render_icon('heart-pulse-fill', 'text-danger') ?> <?= sanitize($stats['lives_saved']) ?>+</h3>
                    <p class="text-muted">Lives Saved</p>
                </div>
                <div class="col-md-4">
                    <h3><?= render_icon('hospital', 'text-info') ?> <?= sanitize($stats['upcoming_drives']) ?></h3>
                    <p class="text-muted">Upcoming Drives</p>
                </div>
            </div>

            <h2 class="text-center mb-4">Latest Announcements</h2>
            <div class="row">
                <?php foreach ($latest_announcements as $ann): ?>
                <div class="col-md-4">
                    <div class="card h-100">
                        <div class="card-body">
                            <h5 class="card-title"><?= sanitize($ann['title']) ?></h5>
                            <p class="card-text text-muted small"><?= date('F j, Y', strtotime($ann['created_at'])) ?></p>
                            <p class="card-text"><?= substr(sanitize($ann['content']), 0, 100) ?>...</p>
                            <a href="?page=announcements" class="stretched-link">Read more</a>
                        </div>
                    </div>
                </div>
                <?php endforeach; ?>
            </div>
        </div>
        <?php
        break;

    case 'login':
        ?>
        <div class="row justify-content-center">
            <div class="col-md-6 col-lg-4">
                <div class="card shadow-sm">
                    <div class="card-body p-4">
                        <h2 class="card-title text-center mb-4">Welcome Back</h2>
                        <form method="post" action="">
                            <input type="hidden" name="action" value="login">
                            <div class="form-floating mb-3">
                                <input type="text" class="form-control" id="username" name="username" placeholder="Username or Email" required>
                                <label for="username">Username or Email</label>
                            </div>
                            <div class="form-floating mb-3">
                                <input type="password" class="form-control" id="password" name="password" placeholder="Password" required>
                                <label for="password">Password</label>
                            </div>
                            <div class="d-grid">
                                <button type="submit" class="btn btn-primary btn-lg">Login</button>
                            </div>
                        </form>
                        <div class="text-center mt-3">
                            <p>Don't have an account? <a href="?page=register">Register here</a></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <?php
        break;

    case 'register':
        ?>
        <div class="row justify-content-center">
            <div class="col-md-8 col-lg-6">
                <div class="card shadow-sm">
                    <div class="card-body p-4">
                        <h2 class="card-title text-center mb-4">Join Our Lifesaving Community</h2>
                        <form method="post" action="" class="row g-3">
                            <input type="hidden" name="action" value="register">
                            <div class="col-md-12">
                                <label for="reg_full_name" class="form-label">Full Name</label>
                                <input type="text" class="form-control" id="reg_full_name" name="full_name" required>
                            </div>
                            <div class="col-md-6">
                                <label for="reg_username" class="form-label">Username</label>
                                <input type="text" class="form-control" id="reg_username" name="username" required>
                            </div>
                            <div class="col-md-6">
                                <label for="reg_email" class="form-label">Email Address</label>
                                <input type="email" class="form-control" id="reg_email" name="email" required>
                            </div>
                            <div class="col-md-12">
                                <label for="reg_password" class="form-label">Password (min 8 characters)</label>
                                <input type="password" class="form-control" id="reg_password" name="password" minlength="8" required>
                            </div>
                            <div class="col-md-6">
                                <label for="reg_contact" class="form-label">Contact Number</label>
                                <input type="tel" class="form-control" id="reg_contact" name="contact_number" required>
                            </div>
                            <div class="col-md-6">
                                <label for="reg_city" class="form-label">City</label>
                                <input type="text" class="form-control" id="reg_city" name="city" required>
                            </div>
                            <div class="col-md-12">
                                <label for="reg_blood_group" class="form-label">Blood Group</label>
                                <select id="reg_blood_group" name="blood_group" class="form-select" required>
                                    <option selected disabled value="">Choose...</option>
                                    <?php foreach($blood_groups as $bg): ?>
                                    <option value="<?= $bg ?>"><?= $bg ?></option>
                                    <?php endforeach; ?>
                                </select>
                            </div>
                            <div class="col-12 d-grid">
                                <button type="submit" class="btn btn-primary btn-lg">Create Account</button>
                            </div>
                        </form>
                         <div class="text-center mt-3">
                            <p>Already have an account? <a href="?page=login">Login here</a></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <?php
        break;

    case 'dashboard':
        check_auth(['donor', 'admin']);
        $user_id = get_current_user_id();
        
        $stats = $db->query("
            SELECT
                (SELECT COUNT(*) FROM users WHERE role='donor' AND approved=1) as total_donors,
                (SELECT COUNT(*) FROM requests WHERE status='pending') as pending_requests,
                (SELECT COUNT(*) FROM drives WHERE status='upcoming') as upcoming_drives,
                (SELECT COUNT(*) FROM donations) as total_donations
        ")->fetch();
        
        $user_profile = $db->prepare("SELECT p.*, u.full_name, u.email FROM profiles p JOIN users u ON u.id = p.user_id WHERE p.user_id = ?");
        $user_profile->execute([$user_id]);
        $profile = $user_profile->fetch();
        
        $my_requests = $db->prepare("SELECT * FROM requests WHERE created_by = ? ORDER BY created_at DESC LIMIT 5");
        $my_requests->execute([$user_id]);
        
        $matching_requests = $db->prepare("SELECT * FROM requests WHERE status = 'pending' AND blood_group = ? ORDER BY created_at DESC LIMIT 5");
        if ($profile) $matching_requests->execute([$profile['blood_group']]);
        ?>
        <h1 class="mb-4">Dashboard</h1>
        <div class="row">
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card border-start border-primary border-4 h-100">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs fw-bold text-primary text-uppercase mb-1">Total Donors</div>
                                <div class="h5 mb-0 fw-bold text-gray-800"><?= $stats['total_donors'] ?></div>
                            </div>
                            <div class="col-auto">
                                <?= render_icon('people-fill', 'fs-2 text-gray-300') ?>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
             <div class="col-xl-3 col-md-6 mb-4">
                <div class="card border-start border-success border-4 h-100">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs fw-bold text-success text-uppercase mb-1">Donations Made</div>
                                <div class="h5 mb-0 fw-bold text-gray-800"><?= $stats['total_donations'] ?></div>
                            </div>
                            <div class="col-auto">
                                <?= render_icon('droplet-fill', 'fs-2 text-gray-300') ?>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card border-start border-info border-4 h-100">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs fw-bold text-info text-uppercase mb-1">Upcoming Drives</div>
                                <div class="h5 mb-0 fw-bold text-gray-800"><?= $stats['upcoming_drives'] ?></div>
                            </div>
                            <div class="col-auto">
                                <?= render_icon('hospital-fill', 'fs-2 text-gray-300') ?>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-md-6 mb-4">
                <div class="card border-start border-warning border-4 h-100">
                    <div class="card-body">
                        <div class="row no-gutters align-items-center">
                            <div class="col mr-2">
                                <div class="text-xs fw-bold text-warning text-uppercase mb-1">Pending Requests</div>
                                <div class="h5 mb-0 fw-bold text-gray-800"><?= $stats['pending_requests'] ?></div>
                            </div>
                            <div class="col-auto">
                                <?= render_icon('hourglass-split', 'fs-2 text-gray-300') ?>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="row">
            <div class="col-lg-6">
                <div class="card shadow-sm mb-4">
                    <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                        <h6 class="m-0 font-weight-bold text-primary">Requests Matching Your Blood Group (<?= $profile['blood_group'] ?? 'N/A' ?>)</h6>
                    </div>
                    <div class="card-body">
                        <?php if ($profile && $matching_requests->rowCount() > 0): ?>
                            <ul class="list-group list-group-flush">
                            <?php while($req = $matching_requests->fetch()): ?>
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <div>
                                        <strong><?= sanitize($req['hospital_name']) ?></strong>, <?= sanitize($req['city']) ?>
                                        <span class="badge bg-danger ms-2"><?= sanitize($req['urgency']) ?></span>
                                    </div>
                                    <a href="?page=requests" class="btn btn-sm btn-outline-primary">View</a>
                                </li>
                            <?php endwhile; ?>
                            </ul>
                        <?php else: ?>
                            <p class="text-center text-muted">No pending requests match your blood group right now. Great job, heroes!</p>
                        <?php endif; ?>
                    </div>
                </div>
            </div>
             <div class="col-lg-6">
                <div class="card shadow-sm mb-4">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary">Your Recent Requests</h6>
                    </div>
                    <div class="card-body">
                         <?php if ($my_requests->rowCount() > 0): ?>
                            <ul class="list-group list-group-flush">
                            <?php while($req = $my_requests->fetch()): ?>
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    For <strong><?= sanitize($req['patient_name']) ?></strong> (<?= sanitize($req['blood_group']) ?>)
                                    <span class="badge bg-info"><?= ucfirst(sanitize($req['status'])) ?></span>
                                </li>
                            <?php endwhile; ?>
                            </ul>
                        <?php else: ?>
                            <p class="text-center text-muted">You haven't created any requests yet.</p>
                        <?php endif; ?>
                    </div>
                </div>
            </div>
        </div>
        
        <?php
        break;

    case 'profile':
        check_auth(['donor', 'admin']);
        $user_id = get_current_user_id();
        $stmt = $db->prepare("SELECT u.*, p.blood_group, p.city, p.last_donation_date, p.is_available 
                              FROM users u 
                              LEFT JOIN profiles p ON u.id = p.user_id 
                              WHERE u.id = ?");
        $stmt->execute([$user_id]);
        $user = $stmt->fetch();
        
        $next_donation_date = get_next_eligible_date($user['last_donation_date']);
        $is_eligible = (new DateTime() >= new DateTime($next_donation_date));
        ?>
        <h1 class="mb-4">My Profile</h1>
        <div class="row">
            <div class="col-lg-4">
                <div class="card mb-4">
                    <div class="card-body text-center">
                        <?= render_icon('person-circle', 'display-1 text-secondary') ?>
                        <h5 class="my-3"><?= sanitize($user['full_name']) ?></h5>
                        <p class="text-muted mb-1"><?= sanitize($user['city']) ?></p>
                        <p class="text-muted mb-4">Role: <span class="badge bg-primary"><?= ucfirst(sanitize($user['role'])) ?></span></p>
                         <div class="d-flex justify-content-center mb-2">
                          <span class="display-4 fw-bold text-danger"><?= sanitize($user['blood_group']) ?></span>
                        </div>
                    </div>
                </div>
                <div class="card mb-4">
                    <div class="card-body">
                         <h5 class="card-title mb-3">Donation Status</h5>
                         <p><strong>Last Donation:</strong> <?= $user['last_donation_date'] ? date('F j, Y', strtotime($user['last_donation_date'])) : 'N/A' ?></p>
                         <p><strong>Next Eligible On:</strong> <?= date('F j, Y', strtotime($next_donation_date)) ?></p>
                         <p><strong>Eligibility:</strong> 
                            <?php if ($is_eligible): ?>
                                <span class="badge bg-success">Eligible to Donate</span>
                            <?php else: ?>
                                <span class="badge bg-warning text-dark">Not Eligible Yet</span>
                            <?php endif; ?>
                         </p>
                    </div>
                </div>
            </div>
            <div class="col-lg-8">
                 <div class="card mb-4">
                    <div class="card-body">
                        <h5 class="card-title mb-3">Personal Information</h5>
                        <form method="post" action="">
                            <input type="hidden" name="action" value="update_profile">
                            <div class="row mb-3">
                                <div class="col-sm-3"><label class="form-label">Full Name</label></div>
                                <div class="col-sm-9"><input type="text" class="form-control" name="full_name" value="<?= sanitize($user['full_name']) ?>"></div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-sm-3"><label class="form-label">Email</label></div>
                                <div class="col-sm-9"><input type="email" class="form-control" name="email" value="<?= sanitize($user['email']) ?>"></div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-sm-3"><label class="form-label">Contact</label></div>
                                <div class="col-sm-9"><input type="text" class="form-control" name="contact_number" value="<?= sanitize($user['contact_number']) ?>"></div>
                            </div>
                             <div class="row mb-3">
                                <div class="col-sm-3"><label class="form-label">City</label></div>
                                <div class="col-sm-9"><input type="text" class="form-control" name="city" value="<?= sanitize($user['city']) ?>"></div>
                            </div>
                            <hr>
                            <h5 class="card-title mb-3">Donor Details</h5>
                            <div class="row mb-3">
                                <div class="col-sm-3"><label class="form-label">Blood Group</label></div>
                                <div class="col-sm-9">
                                    <select class="form-select" name="blood_group">
                                        <?php foreach ($blood_groups as $bg): ?>
                                        <option value="<?= $bg ?>" <?= ($user['blood_group'] == $bg) ? 'selected' : '' ?>><?= $bg ?></option>
                                        <?php endforeach; ?>
                                    </select>
                                </div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-sm-3"><label class="form-label">Last Donation Date</label></div>
                                <div class="col-sm-9"><input type="date" class="form-control" name="last_donation_date" value="<?= sanitize($user['last_donation_date']) ?>"></div>
                            </div>
                             <div class="row mb-3 align-items-center">
                                <div class="col-sm-3"><label class="form-label">Availability</label></div>
                                <div class="col-sm-9">
                                    <div class="form-check form-switch">
                                      <input class="form-check-input" type="checkbox" role="switch" id="is_available" name="is_available" <?= $user['is_available'] ? 'checked' : '' ?>>
                                      <label class="form-check-label" for="is_available">Available to donate</label>
                                    </div>
                                </div>
                            </div>
                            <button type="submit" class="btn btn-primary">Save Changes</button>
                        </form>
                    </div>
                </div>
                <div class="card mb-4">
                    <div class="card-body">
                        <h5 class="card-title mb-3">Change Password</h5>
                        <form method="post" action="">
                            <input type="hidden" name="action" value="change_password">
                            <div class="row mb-3">
                                <div class="col-sm-3"><label class="form-label">Current Password</label></div>
                                <div class="col-sm-9"><input type="password" name="current_password" class="form-control" required></div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-sm-3"><label class="form-label">New Password</label></div>
                                <div class="col-sm-9"><input type="password" name="new_password" class="form-control" minlength="8" required></div>
                            </div>
                             <div class="row mb-3">
                                <div class="col-sm-3"><label class="form-label">Confirm New Password</label></div>
                                <div class="col-sm-9"><input type="password" name="confirm_password" class="form-control" required></div>
                            </div>
                            <button type="submit" class="btn btn-danger">Change Password</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <?php
        break;

    case 'donors':
        check_auth(['donor', 'admin']);
        $search_bg = sanitize($_GET['bg'] ?? '');
        $search_city = sanitize($_GET['city'] ?? '');
        $search_avail = sanitize($_GET['avail'] ?? '1');
        
        $sql = "SELECT u.full_name, u.contact_number, p.* FROM profiles p JOIN users u ON p.user_id = u.id WHERE u.approved = 1";
        $params = [];

        if($search_bg) { $sql .= " AND p.blood_group = ?"; $params[] = $search_bg; }
        if($search_city) { $sql .= " AND p.city LIKE ?"; $params[] = "%$search_city%"; }
        if($search_avail !== 'all') { $sql .= " AND p.is_available = ?"; $params[] = (int)$search_avail; }
        
        $sql .= " ORDER BY p.updated_at DESC";
        $stmt = $db->prepare($sql);
        $stmt->execute($params);
        $donors = $stmt->fetchAll();
        ?>
        <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
            <h1 class="h2">Find a Donor</h1>
        </div>
        <div class="card mb-4">
            <div class="card-body">
                <form method="get" class="row g-3 align-items-end">
                    <input type="hidden" name="page" value="donors">
                    <div class="col-md-3">
                        <label class="form-label">Blood Group</label>
                        <select name="bg" class="form-select">
                             <option value="">Any</option>
                             <?php foreach($blood_groups as $bg): ?>
                                <option value="<?= $bg ?>" <?= ($search_bg == $bg) ? 'selected' : '' ?>><?= $bg ?></option>
                             <?php endforeach; ?>
                        </select>
                    </div>
                     <div class="col-md-3">
                        <label class="form-label">City</label>
                        <input type="text" name="city" class="form-control" value="<?= $search_city ?>" placeholder="e.g., Karachi">
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Availability</label>
                         <select name="avail" class="form-select">
                            <option value="1" <?= ($search_avail == '1') ? 'selected' : '' ?>>Available Only</option>
                            <option value="0" <?= ($search_avail == '0') ? 'selected' : '' ?>>Not Available</option>
                            <option value="all" <?= ($search_avail == 'all') ? 'selected' : '' ?>>All</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <button type="submit" class="btn btn-primary w-100"><?= render_icon('search') ?> Search</button>
                    </div>
                </form>
            </div>
        </div>

        <div class="row">
            <?php if (count($donors) > 0): foreach ($donors as $donor): ?>
            <?php 
                $next_donation_date = get_next_eligible_date($donor['last_donation_date']);
                $is_eligible = (new DateTime() >= new DateTime($next_donation_date));
            ?>
            <div class="col-md-6 col-lg-4 mb-4">
                <div class="card h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start">
                            <h5 class="card-title mb-0"><?= sanitize($donor['full_name']) ?></h5>
                            <span class="display-5 fw-bold text-danger"><?= sanitize($donor['blood_group']) ?></span>
                        </div>
                        <p class="card-text text-muted"><?= render_icon('geo-alt-fill') ?> <?= sanitize($donor['city']) ?></p>
                        <hr>
                        <p class="card-text">
                            <?= render_icon('telephone-fill') ?> <span class="fw-bold"><?= sanitize($donor['contact_number']) ?></span>
                        </p>
                        <p class="card-text">
                            <?= render_icon('calendar-check') ?> Last Donated: 
                            <span class="fw-bold"><?= $donor['last_donation_date'] ? date('M j, Y', strtotime($donor['last_donation_date'])) : 'N/A' ?></span>
                        </p>
                        <p>
                            <?php if($donor['is_available']): ?>
                                <span class="badge bg-availability-available">Currently Available</span>
                            <?php else: ?>
                                <span class="badge bg-availability-unavailable">Currently Unavailable</span>
                            <?php endif; ?>
                            <?php if($is_eligible): ?>
                                <span class="badge bg-success">Eligible</span>
                            <?php else: ?>
                                <span class="badge bg-warning text-dark">Not Eligible Yet</span>
                            <?php endif; ?>
                        </p>
                    </div>
                </div>
            </div>
            <?php endforeach; else: ?>
            <div class="col-12">
                <div class="alert alert-info text-center">No donors found matching your criteria.</div>
            </div>
            <?php endif; ?>
        </div>
        <?php
        break;

    case 'requests':
        check_auth(['donor', 'admin']);
        ?>
        <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
            <h1 class="h2">Blood Requests</h1>
            <div class="btn-toolbar mb-2 mb-md-0">
                <button type="button" class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#createRequestModal">
                    <?= render_icon('plus-circle-fill') ?> Create New Request
                </button>
            </div>
        </div>
        
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Urgency</th>
                        <th>Patient</th>
                        <th>Blood Group</th>
                        <th>Hospital</th>
                        <th>Contact</th>
                        <th>Status</th>
                        <?php if(get_current_user_role() === 'admin'): ?><th>Action</th><?php endif; ?>
                    </tr>
                </thead>
                <tbody>
                    <?php
                    $reqs = $db->query("SELECT * FROM requests ORDER BY
                        CASE urgency WHEN 'emergency' THEN 1 WHEN 'urgent' THEN 2 WHEN 'normal' THEN 3 END, 
                        created_at DESC")->fetchAll();
                    foreach ($reqs as $req):
                    ?>
                    <tr class="urgency-<?= sanitize($req['urgency']) ?>">
                        <td><span class="badge bg-danger text-uppercase"><?= sanitize($req['urgency']) ?></span></td>
                        <td><?= sanitize($req['patient_name']) ?></td>
                        <td><span class="fw-bold"><?= sanitize($req['blood_group']) ?></span></td>
                        <td><?= sanitize($req['hospital_name']) ?>, <?= sanitize($req['city']) ?></td>
                        <td><?= sanitize($req['contact_person']) ?> (<?= sanitize($req['contact_number']) ?>)</td>
                        <td><span class="badge bg-info"><?= ucfirst(sanitize($req['status'])) ?></span></td>
                         <?php if(get_current_user_role() === 'admin'): ?>
                        <td>
                            <form method="post" class="d-inline">
                                <input type="hidden" name="action" value="update_request_status">
                                <input type="hidden" name="id" value="<?= $req['id'] ?>">
                                <select name="status" class="form-select form-select-sm" onchange="this.form.submit()">
                                    <option value="pending" <?= $req['status']=='pending'?'selected':'' ?>>Pending</option>
                                    <option value="fulfilled" <?= $req['status']=='fulfilled'?'selected':'' ?>>Fulfilled</option>
                                    <option value="closed" <?= $req['status']=='closed'?'selected':'' ?>>Closed</option>
                                </select>
                            </form>
                        </td>
                         <?php endif; ?>
                    </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
        </div>

        <!-- Create Request Modal -->
        <div class="modal fade" id="createRequestModal" tabindex="-1">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Create a New Blood Request</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <form method="post">
                        <div class="modal-body">
                            <input type="hidden" name="action" value="create_request">
                            <div class="row g-3">
                                <div class="col-md-6">
                                    <label class="form-label">Patient Name</label>
                                    <input type="text" name="patient_name" class="form-control" required>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">Blood Group</label>
                                    <select name="blood_group" class="form-select" required>
                                        <?php foreach($blood_groups as $bg) echo "<option value='{$bg}'>{$bg}</option>"; ?>
                                    </select>
                                </div>
                                 <div class="col-md-6">
                                    <label class="form-label">Hospital Name</label>
                                    <input type="text" name="hospital_name" class="form-control" required>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">City</label>
                                    <input type="text" name="city" class="form-control" required>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">Contact Person</label>
                                    <input type="text" name="contact_person" class="form-control" required>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">Contact Number</label>
                                    <input type="text" name="contact_number" class="form-control" required>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">Urgency</label>
                                    <select name="urgency" class="form-select" required>
                                        <option value="normal">Normal</option>
                                        <option value="urgent">Urgent</option>
                                        <option value="emergency">Emergency</option>
                                    </select>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">Required Units</label>
                                    <input type="number" name="required_units" class="form-control" value="1" min="1" required>
                                </div>
                                <div class="col-12">
                                    <label class="form-label">Additional Details</label>
                                    <textarea name="details" class="form-control"></textarea>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">Submit Request</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <?php
        break;

    case 'announcements':
    case 'admin_announcements':
        $is_admin_page = ($page === 'admin_announcements');
        if ($is_admin_page) check_auth('admin');
        
        $announcements = $db->query("SELECT a.*, u.full_name FROM announcements a JOIN users u ON a.created_by = u.id ORDER BY a.created_at DESC")->fetchAll();
        ?>
        <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
            <h1 class="h2">Announcements</h1>
            <?php if ($is_admin_page): ?>
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addAnnouncementModal"><?= render_icon('plus-circle') ?> New Announcement</button>
            <?php endif; ?>
        </div>

        <?php if ($is_admin_page): ?>
        <div class="modal fade" id="addAnnouncementModal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <form method="post">
                        <div class="modal-header">
                            <h5 class="modal-title">New Announcement</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <div class="modal-body">
                            <input type="hidden" name="action" value="add_announcement">
                            <div class="mb-3">
                                <label class="form-label">Title</label>
                                <input type="text" name="title" class="form-control" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Content</label>
                                <textarea name="content" class="form-control" rows="5" required></textarea>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary">Post</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <?php endif; ?>
        
        <div class="row">
            <?php foreach($announcements as $ann): ?>
            <div class="col-md-12 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title"><?= sanitize($ann['title']) ?></h4>
                        <p class="card-subtitle mb-2 text-muted">Posted on <?= date('F j, Y, g:i a', strtotime($ann['created_at'])) ?> by <?= sanitize($ann['full_name']) ?></p>
                        <p class="card-text mt-3"><?= nl2br(sanitize($ann['content'])) ?></p>
                        <?php if ($is_admin_page): ?>
                        <hr>
                        <form method="post" onsubmit="return confirm('Are you sure you want to delete this announcement?');">
                            <input type="hidden" name="action" value="delete_announcement">
                            <input type="hidden" name="id" value="<?= $ann['id'] ?>">
                            <button type="submit" class="btn btn-sm btn-outline-danger"><?= render_icon('trash') ?> Delete</button>
                        </form>
                        <?php endif; ?>
                    </div>
                </div>
            </div>
            <?php endforeach; ?>
        </div>
        <?php
        break;

    case 'admin_users':
        check_auth('admin');
        $users = $db->query("SELECT u.*, p.blood_group FROM users u LEFT JOIN profiles p ON u.id = p.user_id ORDER BY u.created_at DESC")->fetchAll();
        ?>
        <h1 class="h2 mb-4">User Management</h1>
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Username</th>
                                <th>Role</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <?php foreach($users as $user): ?>
                            <tr>
                                <td><?= sanitize($user['full_name']) ?> <br><small class="text-muted"><?= sanitize($user['email']) ?></small></td>
                                <td><?= sanitize($user['username']) ?></td>
                                <td>
                                    <?php if ($user['id'] === get_current_user_id() && $user['role'] === 'admin'): ?>
                                        <span class="badge bg-primary">Admin</span>
                                    <?php else: ?>
                                    <form method="post" class="d-inline">
                                        <input type="hidden" name="action" value="admin_update_user">
                                        <input type="hidden" name="user_id" value="<?= $user['id'] ?>">
                                        <select name="role" class="form-select form-select-sm" onchange="this.form.submit()">
                                            <option value="donor" <?= $user['role']=='donor'?'selected':'' ?>>Donor</option>
                                            <option value="admin" <?= $user['role']=='admin'?'selected':'' ?>>Admin</option>
                                        </select>
                                    </form>
                                    <?php endif; ?>
                                </td>
                                <td>
                                    <form method="post">
                                        <input type="hidden" name="action" value="admin_update_user">
                                        <input type="hidden" name="user_id" value="<?= $user['id'] ?>">
                                        <input type="hidden" name="role" value="<?= $user['role'] ?>">
                                        <div class="form-check form-switch">
                                            <input class="form-check-input" type="checkbox" name="approved" <?= $user['approved']?'checked':'' ?> onchange="this.form.submit()">
                                            <label class="form-check-label"><?= $user['approved']?'Approved':'Pending' ?></label>
                                        </div>
                                    </form>
                                </td>
                                <td>
                                    <div class="btn-group">
                                        <form method="post" onsubmit="return confirm('Are you sure? This will generate a new password.');" class="d-inline">
                                            <input type="hidden" name="action" value="admin_reset_password">
                                            <input type="hidden" name="user_id" value="<?= $user['id'] ?>">
                                            <button type="submit" class="btn btn-sm btn-outline-secondary" title="Reset Password"><?= render_icon('key') ?></button>
                                        </form>
                                        <?php if ($user['id'] !== get_current_user_id()): ?>
                                        <form method="post" onsubmit="return confirm('WARNING: This will permanently delete the user and all associated data. Are you sure?');" class="d-inline">
                                            <input type="hidden" name="action" value="admin_delete_user">
                                            <input type="hidden" name="id" value="<?= $user['id'] ?>">
                                            <button type="submit" class="btn btn-sm btn-outline-danger" title="Delete User"><?= render_icon('trash') ?></button>
                                        </form>
                                        <?php endif; ?>
                                    </div>
                                </td>
                            </tr>
                            <?php endforeach; ?>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <?php
        break;

    case 'admin_backup':
        check_auth('admin');
        ?>
        <h1 class="h2 mb-4">Backup & Restore</h1>
        <div class="row">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title"><?= render_icon('database-down') ?> Create a Backup</h5>
                        <p class="card-text">Download a complete backup of the application database. Keep this file in a safe place.</p>
                        <form method="post">
                            <input type="hidden" name="action" value="backup_db">
                            <button type="submit" class="btn btn-primary">Download Backup Now</button>
                        </form>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card border-danger">
                    <div class="card-header bg-danger text-white">
                        <h5 class="card-title mb-0"><?= render_icon('database-up') ?> Restore from Backup</h5>
                    </div>
                    <div class="card-body">
                        <div class="alert alert-danger"><strong>WARNING:</strong> Restoring will completely overwrite the current database with the contents of the backup file. This action cannot be undone.</div>
                        <form method="post" enctype="multipart/form-data" onsubmit="return confirm('Are you absolutely sure you want to overwrite the database? All current data will be lost.');">
                            <input type="hidden" name="action" value="restore_db">
                            <div class="mb-3">
                                <label for="backup_file" class="form-label">Select .sqlite Backup File</label>
                                <input class="form-control" type="file" id="backup_file" name="backup_file" accept=".sqlite" required>
                            </div>
                            <button type="submit" class="btn btn-danger">Restore Database</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <?php
        break;

    default:
        // Fallback for any unknown page
        echo "<div class='alert alert-danger'>Page not found. Redirecting to dashboard...</div>";
        echo "<script>setTimeout(() => window.location.href = '?page=dashboard', 2000);</script>";
        break;
}
?>

        </div>
    </main>

<footer class="mt-auto py-3 bg-light <?php if (is_logged_in()) echo 'main-content'; ?>">
    <div class="container text-center">
        <span class="text-muted">© <?= date('Y') ?> <?= SITE_NAME ?>. All Rights Reserved. Application by Yasin Ullah. Version <?= APP_VERSION ?></span>
    </div>
</footer>

<!-- Bootstrap JS Bundle -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
<script>
    // Sidebar toggle for mobile
    const sidebarToggle = document.getElementById('sidebarToggle');
    if (sidebarToggle) {
        sidebarToggle.addEventListener('click', () => {
            document.getElementById('sidebarMenu').classList.toggle('active');
        });
    }

    // Activate Bootstrap tooltips
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl)
    })
</script>

</body>
</html>
<?php ob_end_flush(); ?>